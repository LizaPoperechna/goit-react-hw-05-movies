{"version":3,"file":"static/js/219.b7804c98.chunk.js","mappings":"oSAAaA,EAAM,gCACNC,EAAU,mCAGVC,EAAW,mCAAG,oGACAC,MAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAD1C,cACjBG,EADiB,gBAEVA,EAASC,OAFC,mFAAH,qDAKXC,EAAc,mCAAG,WAAOC,GAAP,uFACHJ,MAAM,GAAD,OAAIH,EAAJ,gCAA+BC,EAA/B,yBAAuDM,IADzD,cACpBH,EADoB,gBAEbA,EAASC,OAFI,mFAAH,sDAKdG,EAAY,mCAAG,WAAOC,GAAP,uFACDN,MAAM,GAAD,OAAIH,EAAJ,kBAAiBS,EAAjB,oBAA+BR,IADnC,cAClBG,EADkB,gBAEXA,EAASC,OAFE,mFAAH,sDAKZK,EAAgB,mCAAG,WAAOD,GAAP,uFACLN,MAAM,GAAD,OAAIH,EAAJ,kBAAiBS,EAAjB,4BAAuCR,IADvC,cACtBG,EADsB,gBAEfA,EAASC,OAFM,mFAAH,sDAKhBM,EAAmB,mCAAG,WAAOF,GAAP,uFACRN,MAAM,GAAD,OAAIH,EAAJ,kBAAiBS,EAAjB,4BAAuCR,IADpC,cACzBG,EADyB,gBAElBA,EAASC,OAFS,mFAAH,qD,wKCtBnBO,EAAWC,EAAAA,GAAAA,GAAH,8KAaRC,EAAWD,EAAAA,GAAAA,GAAH,uFAMRE,EAAYF,EAAAA,GAAAA,IAAH,yTAaTG,EAAWH,EAAAA,GAAAA,EAAH,kF,kBCerB,EApCiB,WACT,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAoBX,OAlBIE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,mCAAG,8GAEOb,EAAAA,EAAAA,IAAiBU,GAFxB,OAENI,EAFM,OAGZL,EAAUK,EAAKC,MAHH,gDAMZC,EAAAA,GAAAA,MAAY,uCACZC,QAAQC,IAAR,MAPY,yDAAH,qDAUbL,GACD,GAAE,CAACH,KAMD,UAACR,EAAD,WACKM,GAAUA,EAAOW,KAAI,YAA0C,IAAxCpB,EAAuC,EAAvCA,GAAIqB,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAC/C,OAAQ,UAAClB,EAAD,YACI,SAACC,EAAD,CACIkB,IAAKF,EA5BpB,kCA4BgDA,EAAeG,EAChDC,IAAKL,KACT,UAACd,EAAD,YAAU,iCAAV,IAAwBc,KACvBE,IAAa,UAAChB,EAAD,YAAU,uCAAmBgB,OALhCvB,EAMC,IACI,IAAlBS,EAAOkB,SAAgB,gFAGlD,C","sources":["Api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c25450473e1297d275a0ebc0c587a230';\n\n\nexport const getTrending = async () => {\n    const responce = await fetch(`${URL}trending/movie/day?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieSearch = async (query) => {\n    const responce = await fetch(`${URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`);\n    return await responce.json();\n}\n\nexport const getMovieById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieCastById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieReviewsById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n    return await responce.json();\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n  max-width: 1100px;\n  gap: 10px;\n  margin-top: 20px;\n\n\n\n`;\n\nexport const CastItem = styled.li`\n    text-align: center;\n    width: 160px;\n    margin: 10px;\n`;\n\nexport const CastImage = styled.img`\n    width: 160px;\n    height: 240px;\n    border-radius: 14px;\n    margin-bottom: 10px;\n    box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n    &:hover {\n        transform: scale(1.05);\n}\n`\n\nexport const CastInfo = styled.p` \n  font-weight: 500;\n  font-size: 14px;\n  margin: 0;\n\n`\n","import { getMovieCastById } from \"Api/Api\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { toast } from 'react-toastify';\nimport { CastItem, CastImage, CastList, CastInfo } from \"./Cast.styled\";\nimport defaultCastPoster from '../../images/pngegg.png';\n\n\n//const placeHolder =\n // 'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png';\n\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\n    const Cast = () => {\n        const [actors, setActors] = useState([]);\n        const {movieId} = useParams();\n    \n        useEffect(() => {\n            const getCast = async () => {\n            try {\n                const data = await getMovieCastById(movieId);\n                setActors(data.cast);\n                } \n            catch (error) {\n                toast.error('Something went wrong :(. Try again.');\n                console.log(error);\n                }\n            };\n            getCast();\n          }, [movieId]);\n    \n\n\n\n\n    return ( <CastList>\n                 {actors && actors.map(({id, name, profile_path, character}) => {\n                  return (<CastItem key={id}>\n                              <CastImage\n                                  src={profile_path ? baseImgUrl + profile_path : defaultCastPoster}\n                                  alt={name}/>\n                              <CastInfo><b>Name:</b> {name}</CastInfo>\n                              {character && <CastInfo><b>Character: </b>{character}</CastInfo>}\n                           </CastItem>); })} \n                           {actors.length === 0 && <p> Soory, we don't have information about movie cast</p>}\n            </CastList>\n    )\n}\n\nexport default Cast;\n\n        \n\n"],"names":["URL","API_KEY","getTrending","fetch","responce","json","getMovieSearch","query","getMovieById","id","getMovieCastById","getMovieReviewsById","CastList","styled","CastItem","CastImage","CastInfo","useState","actors","setActors","movieId","useParams","useEffect","getCast","data","cast","toast","console","log","map","name","profile_path","character","src","defaultCastPoster","alt","length"],"sourceRoot":""}