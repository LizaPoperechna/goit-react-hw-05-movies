{"version":3,"file":"static/js/785.9ee169d5.chunk.js","mappings":"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","sources":["Api/Api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","components/ButtonGoBack/ButtonGoBack.styled.js","components/ButtonGoBack/ButtonGoBack.js","pages/MovieDetails.js"],"sourcesContent":["export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c25450473e1297d275a0ebc0c587a230';\n\n\nexport const getTrending = async () => {\n    const responce = await fetch(`${URL}trending/movie/day?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieSearch = async (query) => {\n    const responce = await fetch(`${URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`);\n    return await responce.json();\n}\n\nexport const getMovieById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieCastById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieReviewsById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n    return await responce.json();\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ContainerMovieData = styled.div`\n  padding: 10px 30px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 16px;\n  max-width: 1090px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border: 2px solid #ccc8c8;\n  border-radius: 10px;\n`;\n\nexport const Poster = styled.img`\n    width: 240px;\n    height: 320px;\n    border: 2px solid #fff;\n    border-radius: 6px;\n    box-shadow: 0px 4px 5px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const BoxDataMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n  padding: 0 20px;\n`;\n\n// export const ListGenres = styled.ul`\n//   display: flex;\n//   list-style: none;\n//   gap: 10px;\n// `;\n\nexport const ListLink = styled.ul`\n  margin-top: 15px;\n  list-style: none;\n  display: flex;\n  gap: 15px;\n`;\nexport const Text = styled.p`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-weight: 500;\n`;\nexport const Link = styled(NavLink)`\n    display: inline-block;\n    padding: 8px 16px;\n    border-radius: 4px;\n    margin-bottom: 10px;\n    box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.5);\n    text-decoration: none;\n    text-align: center;\n    width: 80px;\n    font-weight: 500;\n    color: black;\n    :hover,\n    :focus {\n    color: blue;\n    background-color: lightblue;\n    }\n`;","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ContainerMovieData, Box, BoxDataMovie, Poster, Text , ListLink, Link } from './MovieInfo.styled';\nimport defaultCastPoster from '../../images/no-image-icon-23500.jpg';\n\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieInfo = ({url, title, overview, score, genres}) => {\n    return (\n     <ContainerMovieData>\n        <Box>\n            <Poster src={url ? baseImgUrl + url : defaultCastPoster} alt={title} />\n\n            <BoxDataMovie>\n                <h2>{title}</h2>\n                \n                {score !==0 && <Text>User Score: {Math.round(score * 10)}%</Text>}\n\n                {overview && (<div>\n                                <h3>Overview</h3>\n                                <Text>{overview}</Text>\n                            </div>)}\n\n                {genres && (<div>                    \n                                <h4>Genres</h4>\n                                <Text>{genres.map(genre => genre.name).join(', ')}</Text>\n                            </div>)}\n\n            </BoxDataMovie>\n        </Box>\n        \n        <div>\n            <h5>Additional information</h5>\n            <ListLink>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>\n            </ListLink>\n            <Suspense fallback={null}>\n                <Outlet />\n            </Suspense>\n        </div>\n       </ContainerMovieData> \n    )\n\n}\n\nMovieInfo.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n}\n\n\n//    <Suspense fallback={null}>\n// </Suspense>","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackButton = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  :hover {\n    color: blue;\n  }\n`;","import { GoBackButton } from \"./ButtonGoBack.styled\";\nimport { HiArrowLeft } from \"react-icons/hi\";\n\nexport const ButtonGoBack = ({to, children}) => {\n    return (\n        <GoBackButton to={to}>\n            <HiArrowLeft size='14'/>\n            {children}\n        </GoBackButton>\n    )\n}\n\n","import { useParams, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { getMovieById} from \"Api/Api\";\nimport { toast } from 'react-toastify';\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo\";\nimport { ButtonGoBack } from \"components/ButtonGoBack/ButtonGoBack\";\n\nconst MovieDetails = () => {\n\n  const {movieId} = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const ref = useRef(location.state?.from ?? '/movies');\n\n\n  useEffect(() => {\n    const getMovie = async () => {\n        try {\n            const data = await getMovieById(movieId);\n            setMovieDetails(data);\n        } catch (error) {\n            toast.error('Something went wrong :(. Try again.');\n            console.log(error);\n        }} \n        getMovie();\n    }, [movieId]);\n\n   return (\n    <>\n      <ButtonGoBack to={ref.current}>Go back</ButtonGoBack>\n      {movieDetails && (<MovieInfo \n                            url={movieDetails.poster_path}\n                            title={movieDetails.title} \n                            overview={movieDetails.overview}\n                            score={movieDetails.vote_average}\n                            genres={movieDetails.genres}\n      />)}\n    </>\n   )\n}\n\nexport default MovieDetails;\n\n"],"names":["URL","API_KEY","getTrending","fetch","responce","json","getMovieSearch","query","getMovieById","id","getMovieCastById","getMovieReviewsById","ContainerMovieData","styled","Box","Poster","BoxDataMovie","ListLink","Text","Link","NavLink","MovieInfo","url","title","overview","score","genres","src","defaultCastPoster","alt","Math","round","map","genre","name","join","to","Suspense","fallback","GoBackButton","ButtonGoBack","children","size","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","ref","useRef","state","from","useEffect","getMovie","data","toast","console","log","current","poster_path","vote_average"],"sourceRoot":""}