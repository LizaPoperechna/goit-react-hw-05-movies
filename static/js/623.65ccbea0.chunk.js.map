{"version":3,"file":"static/js/623.65ccbea0.chunk.js","mappings":"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","sources":["Api/Api.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js"],"sourcesContent":["export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c25450473e1297d275a0ebc0c587a230';\n\n\nexport const getTrending = async () => {\n    const responce = await fetch(`${URL}trending/movie/day?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieSearch = async (query) => {\n    const responce = await fetch(`${URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`);\n    return await responce.json();\n}\n\nexport const getMovieById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieCastById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieReviewsById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n    return await responce.json();\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 20px 0 0 20px;\n  gap: 10px;\n`;\n\nexport const ItemMovie = styled.li`\n  display: inline-block;\n  width: 100%;\n`;\n\nexport const MovieLink = styled(NavLink)`\n\n\n  display: inline-block;\n  padding: 5px 16px;\n  color: black;\n  text-decoration: none;\n  border-radius: 4px;\n  :hover,\n  :focus {\n    color: blue;\n    background-color: lightblue;\n  }\n`;\n\n\n\n","import { useLocation } from 'react-router-dom';\nimport { List, ItemMovie, MovieLink } from \"./FilmList.styled\";\n\n\nexport const FilmList = ({ movies }) => {\n\n    const location = useLocation();\n\n    return (<>\n                <List>\n                    {movies && movies.map(movie => (\n                        <ItemMovie key={movie.id}>\n                            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</MovieLink>\n                        </ItemMovie>))}\n                 </List>\n    </>\n\n    )\n}\n\n\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n`\n\nexport const Input = styled.input`\n    border: 0;\n    border-radius: 4px;\n    background: lightblue;\n    outline: none;\n    height: 46px;\n    width: 400px;\n    padding: 0px 10px;\n    color: rgb(0, 0, 0);\n    font-size: 16px;\n    margin-right: 15px;\n`\n\nexport const SearchButton = styled.button`\n    display: inline-block;\n    padding: 8px 16px;\n    border-radius: 4px;\n    margin-bottom: 10px;\n    box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.5);\n    text-decoration: none;\n    text-align: center;\n    height: 46px;\n    width: 100px;\n    font-size: 18px;\n    font-weight: 500;\n    color: black;\n    :hover,\n    :focus {\n        color: blue;\n        background-color: lightblue;\n    }\n`;","import { useState } from \"react\";\nimport { Form, Input, SearchButton } from \"./SearchForm.styled\";\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [searchQuery, setSearchQuery] = useState([]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit(searchQuery);\n    };\n\n    const handleChange = e => {\n        setSearchQuery(e.target.value);\n    };\n\n    return (\n        <>\n            <Form onSubmit={handleSubmit}>\n                <Input \n                    type='text'\n                    name='query' \n                    placeholder=\"Put movie name\" \n                    autoFocus \n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                    value={searchQuery}>\n                 </Input>\n                <SearchButton>Search</SearchButton>\n            </Form>\n        </>\n    )\n\n};\n\n","import { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { FilmList } from \"components/FilmList/FilmList\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieSearch } from \"Api/Api\";\nimport { useSearchParams} from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst Movies = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get('query');\n\n\nuseEffect(() => {\n\n    if (!movieName) {\n        return;\n    };\n\n    if (movieName.trim() === '') {\n        toast.error('Введіть запит для пошуку');\n        return;\n      }\n\n    const SearchMovie = async () => {\n        try {\n            const data = await getMovieSearch(movieName);\n            setMovies(data.results);\n        }\n        catch (error) {\n            toast.error('Something went wrong :(. Try again.');\n            console.log(error);\n        }\n    }\n    SearchMovie()\n} , [movieName]);\n\nconsole.log(movieName);\n\nconst handleSearch = query => {\n    setSearchParams({query});\n  };\n\n    return ( \n    <>    \n        <SearchForm onSubmit={handleSearch}/>\n        <FilmList movies={movies}/>\n        <ToastContainer autoClose={3000} theme=\"colored\" />\n    </>\n\n    )\n}\n\nexport default Movies;"],"names":["URL","API_KEY","getTrending","fetch","responce","json","getMovieSearch","query","getMovieById","id","getMovieCastById","getMovieReviewsById","List","styled","ItemMovie","MovieLink","NavLink","FilmList","movies","location","useLocation","map","movie","to","state","from","title","Form","Input","SearchButton","SearchForm","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","type","name","placeholder","autoFocus","autoComplete","onChange","target","value","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","trim","SearchMovie","data","results","toast","console","log","autoClose","theme"],"sourceRoot":""}