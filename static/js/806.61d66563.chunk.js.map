{"version":3,"file":"static/js/806.61d66563.chunk.js","mappings":"oSAAaA,EAAM,gCACNC,EAAU,mCAGVC,EAAW,mCAAG,oGACAC,MAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAD1C,cACjBG,EADiB,gBAEVA,EAASC,OAFC,mFAAH,qDAKXC,EAAc,mCAAG,WAAOC,GAAP,uFACHJ,MAAM,GAAD,OAAIH,EAAJ,gCAA+BC,EAA/B,yBAAuDM,IADzD,cACpBH,EADoB,gBAEbA,EAASC,OAFI,mFAAH,sDAKdG,EAAY,mCAAG,WAAOC,GAAP,uFACDN,MAAM,GAAD,OAAIH,EAAJ,kBAAiBS,EAAjB,oBAA+BR,IADnC,cAClBG,EADkB,gBAEXA,EAASC,OAFE,mFAAH,sDAKZK,EAAgB,mCAAG,WAAOD,GAAP,uFACLN,MAAM,GAAD,OAAIH,EAAJ,kBAAiBS,EAAjB,4BAAuCR,IADvC,cACtBG,EADsB,gBAEfA,EAASC,OAFM,mFAAH,sDAKhBM,EAAmB,mCAAG,WAAOF,GAAP,uFACRN,MAAM,GAAD,OAAIH,EAAJ,kBAAiBS,EAAjB,4BAAuCR,IADpC,cACzBG,EADyB,gBAElBA,EAASC,OAFS,mFAAH,qD,sKCtBnBO,EAAcC,EAAAA,GAAAA,GAAH,yLAWXC,EAAeD,EAAAA,GAAAA,GAAJ,2GAMXE,EAASF,EAAAA,GAAAA,EAAH,gG,SCoBnB,EAhCgB,WACZ,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAiBP,OAfAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEIX,EAAAA,EAAAA,IAAoBQ,GAFxB,OAETI,EAFS,OAGfL,EAAWK,EAAKC,SAHD,gDAMfC,EAAAA,GAAAA,MAAY,uCACZC,QAAQC,IAAR,MAPe,yDAAH,qDAUZL,GACL,GAAE,CAACH,KAGE,UAACP,EAAD,WACHK,GAAWA,EAAQW,KAAI,YAA4B,IAA1BnB,EAAyB,EAAzBA,GAAIoB,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAClC,OACI,UAAChB,EAAD,YACI,0BAAG,SAACC,EAAD,sBAAH,IAA6Bc,MAC7B,uBAAIC,MAFUrB,EAIzB,IACmB,IAAnBQ,EAAQc,SAAgB,wEAGhC,C","sources":["Api/Api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'c25450473e1297d275a0ebc0c587a230';\n\n\nexport const getTrending = async () => {\n    const responce = await fetch(`${URL}trending/movie/day?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieSearch = async (query) => {\n    const responce = await fetch(`${URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`);\n    return await responce.json();\n}\n\nexport const getMovieById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieCastById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n    return await responce.json();\n}\n\nexport const getMovieReviewsById = async (id) => {\n    const responce = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n    return await responce.json();\n}","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    list-style: none;\n    max-width: 1060px;\n\n    text-align: justify;\n`\n\nexport const ReviewsItem  = styled.li`\n    border: 2px solid #ccc8c8;\n    border-radius: 10px;\n    padding: 10px 20px;\n`\n\nexport const Author = styled.b`\n  display: inline-block;\n  margin-left: 15px;\n  margin-bottom: 10px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviewsById } from \"Api/Api\";\nimport { toast } from 'react-toastify';\nimport { ReviewsList, Author, ReviewsItem } from \"./Reviews.styled\";\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const getReviews = async () => {\n        try{\n            const data = await getMovieReviewsById(movieId);\n            setReviews(data.results);\n            } \n        catch (error) {\n            toast.error('Something went wrong :(. Try again.');\n            console.log(error);\n            }\n        }\n            getReviews();\n      }, [movieId]);\n\n\n    return (<ReviewsList>\n        {reviews && reviews.map(({id, author, content}) => {\n            return (\n                <ReviewsItem key={id}>\n                    <p><Author>Author:</Author> {author}</p>\n                    <p>{content}</p>\n                </ReviewsItem>)\n        })}\n        {reviews.length === 0 && <p>Sorry. There are no reviews for this movie</p>}\n        </ReviewsList>\n    )\n}\n\nexport default Reviews;"],"names":["URL","API_KEY","getTrending","fetch","responce","json","getMovieSearch","query","getMovieById","id","getMovieCastById","getMovieReviewsById","ReviewsList","styled","ReviewsItem","Author","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","data","results","toast","console","log","map","author","content","length"],"sourceRoot":""}